            std::vector<shared_ptr<Entity>>* array = &game->Entities[BulletType];
            for (int i = 0; i < array->size(); i++) {
                if (shared_ptr<Bullet> entity = dynamic_pointer_cast<Bullet>(array->at(i)); entity != nullptr and !entity->ShouldDelete) {
                    float Dist = Vector2Distance({entity->BoundingBox.x, entity->BoundingBox.y}, {Owner->BoundingBox.x, Owner->BoundingBox.y});
                    if (Dist <= CurrentWeapon->Range) {
                        //float AngleToEntity = atan2(Owner->BoundingBox.y - entity->BoundingBox.y, Owner->BoundingBox.x - entity->BoundingBox.x) * RAD2DEG;
                        //AngleToEntity - MeleeAnimRange/2 < MeleeAnimAngle && AngleToEntity + MeleeAnimRange/2 > MeleeAnimAngle &&
                        entity->Movement = {-entity->Movement.x, -entity->Movement.y};
                    }
                }
            }